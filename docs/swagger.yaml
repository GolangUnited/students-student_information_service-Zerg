definitions:
  models.Cert:
    properties:
      certID:
        type: string
      issued:
        type: string
      studentID:
        type: integer
    type: object
  models.Diploma:
    properties:
      description:
        type: string
      studentID:
        type: integer
      theme:
        type: string
    type: object
  models.Group:
    properties:
      dateEnd:
        type: string
      dateStart:
        type: string
      id:
        type: integer
      mentor:
        type: integer
    type: object
  models.Interview:
    properties:
      date:
        type: string
      mark:
        type: integer
      mentorID:
        type: integer
      notes:
        type: string
      studentID:
        type: integer
    type: object
  models.User:
    properties:
      birthday:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      passwordHash:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for management students database
  title: Zerg Team Student Information Service
  version: "0.1"
paths:
  /admins/:id:
    delete:
      consumes:
      - application/json
      description: Remove admin from database by id
      operationId: remove-admin-by-id
      parameters:
      - description: admin id to remove
        in: body
        name: input
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Remove admin by id
      tags:
      - admins
    get:
      consumes:
      - application/json
      description: Get admin from database by ID
      operationId: get-admin-by-id
      parameters:
      - description: admin id to get
        in: body
        name: input
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Get admin by id
      tags:
      - admins
  /admins/new:
    post:
      consumes:
      - application/json
      description: Create new group in database
      operationId: new-admin
      parameters:
      - description: admin id
        in: body
        name: input
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Add admin
      tags:
      - admins
  /auth/signin:
    get:
      consumes:
      - application/json
      description: Get user from database
      operationId: get-user
      parameters:
      - description: user to get
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Get user
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Create new user in database
      operationId: create-user
      parameters:
      - description: user data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Create user
      tags:
      - auth
  /certs/:id:
    delete:
      consumes:
      - application/json
      description: Remove cert from database by id
      operationId: remove-cert-by-id
      parameters:
      - description: cert id to remove
        in: body
        name: input
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Remove cert
      tags:
      - certs
    get:
      consumes:
      - application/json
      description: Get cert from database by ID
      operationId: get-cert-by-id
      parameters:
      - description: cert id to get
        in: body
        name: input
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Get cert by id
      tags:
      - certs
    patch:
      consumes:
      - application/json
      description: Update cert data in database by id
      operationId: update-cert-by-id
      parameters:
      - description: cert data to update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Cert'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Update cert
      tags:
      - certs
  /certs/new:
    post:
      consumes:
      - application/json
      description: Create new cert in database
      operationId: create-cert
      parameters:
      - description: cert data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Cert'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Create cert
      tags:
      - certs
  /diplomas/:id:
    delete:
      consumes:
      - application/json
      description: Remove diploma from database by id
      operationId: remove-diploma-by-id
      parameters:
      - description: diploma id to remove
        in: body
        name: input
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Remove diploma
      tags:
      - diplomas
    get:
      consumes:
      - application/json
      description: Get diploma from database by ID
      operationId: get-diploma-by-id
      parameters:
      - description: diploma id to get
        in: body
        name: input
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Get diploma by id
      tags:
      - diplomas
    patch:
      consumes:
      - application/json
      description: Update diploma data in database by id
      operationId: update-diploma-by-id
      parameters:
      - description: diploma data to update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Diploma'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Update diploma
      tags:
      - diplomas
  /diplomas/new:
    post:
      consumes:
      - application/json
      description: Create new diploma in database
      operationId: create-diploma
      parameters:
      - description: diploma data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Diploma'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Create diploma
      tags:
      - diplomas
  /groups/:id:
    delete:
      consumes:
      - application/json
      description: Remove group from database by id
      operationId: remove-group-by-id
      parameters:
      - description: group id to remove
        in: body
        name: input
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Remove group
      tags:
      - groups
    get:
      consumes:
      - application/json
      description: Get group from database by ID
      operationId: get-group-by-id
      parameters:
      - description: group id to get
        in: body
        name: input
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Get group by id
      tags:
      - groups
    patch:
      consumes:
      - application/json
      description: Update group data in database by id
      operationId: update-group-by-id
      parameters:
      - description: group data to update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Group'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Update group
      tags:
      - groups
  /groups/new:
    post:
      consumes:
      - application/json
      description: Create new group in database
      operationId: create-group
      parameters:
      - description: group data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Group'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Create group
      tags:
      - groups
  /health:
    get:
      description: Get status of webserver
      responses:
        "200":
          description: OK
      summary: Application health check
      tags:
      - health
  /interviews/:id:
    delete:
      consumes:
      - application/json
      description: Remove interview from database by id
      operationId: remove-interview-by-id
      parameters:
      - description: interview id to remove
        in: body
        name: input
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Remove interview
      tags:
      - interviews
    get:
      consumes:
      - application/json
      description: Get interview from database by ID
      operationId: get-interview-by-id
      parameters:
      - description: interview id to get
        in: body
        name: input
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Get interview by id
      tags:
      - interviews
    patch:
      consumes:
      - application/json
      description: Update interview data in database by id
      operationId: update-interview-by-id
      parameters:
      - description: interview data to update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Interview'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Update interview
      tags:
      - interviews
  /interviews/new:
    post:
      consumes:
      - application/json
      description: Create new interview in database
      operationId: create-interview
      parameters:
      - description: interview data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Interview'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Create interview
      tags:
      - interviews
  /lists/admins:
    get:
      consumes:
      - application/json
      description: Get list of all admins
      operationId: admins-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Get admins list
      tags:
      - lists
  /lists/certs:
    get:
      consumes:
      - application/json
      description: Get list of all certs
      operationId: certs-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Get certs list
      tags:
      - lists
  /lists/diplomas:
    get:
      consumes:
      - application/json
      description: Get list of all diplomas
      operationId: diplomas-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Get diplomas list
      tags:
      - lists
  /lists/groups:
    get:
      consumes:
      - application/json
      description: Get list of all groups
      operationId: groups-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Get groups list
      tags:
      - lists
  /lists/interviews:
    get:
      consumes:
      - application/json
      description: Get list of all interviews
      operationId: interviews-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Get interviews list
      tags:
      - lists
  /lists/mentors:
    get:
      consumes:
      - application/json
      description: Get list of all mentors
      operationId: mentors-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Get mentors list
      tags:
      - lists
  /lists/users:
    get:
      consumes:
      - application/json
      description: Get list of all users
      operationId: users-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Get users list
      tags:
      - lists
  /mentors/:id:
    delete:
      consumes:
      - application/json
      description: Remove mentor from database by id
      operationId: remove-mentor-by-id
      parameters:
      - description: mentor id to remove
        in: body
        name: input
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Remove mentor by id
      tags:
      - mentors
    get:
      consumes:
      - application/json
      description: Get mentor from database by ID
      operationId: get-mentor-by-id
      parameters:
      - description: mentor id to get
        in: body
        name: input
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Get mentor by id
      tags:
      - mentors
  /mentors/new:
    post:
      consumes:
      - application/json
      description: Create new group in database
      operationId: new-mentor
      parameters:
      - description: mentor id
        in: body
        name: input
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Add mentor
      tags:
      - mentors
  /users/:id:
    delete:
      consumes:
      - application/json
      description: Remove user from database by id
      operationId: remove-user-by-id
      parameters:
      - description: user id to delete
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Remove user by id
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user from database by ID
      operationId: get-user-by-id
      parameters:
      - description: user id to get
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Get user by ID
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Update user data in database by id
      operationId: update-user-by-id
      parameters:
      - description: user data to update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Update user by id
      tags:
      - users
  /users/new:
    post:
      consumes:
      - application/json
      description: Create new user in database
      operationId: new-user
      parameters:
      - description: user data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Create user
      tags:
      - users
swagger: "2.0"
